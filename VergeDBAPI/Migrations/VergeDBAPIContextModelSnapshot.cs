// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VergeDBAPI;

#nullable disable

namespace VergeDBAPI.Migrations
{
    [DbContext(typeof(VergeDBAPIContext))]
    partial class VergeDBAPIContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("VergeDBAPI.Models.Asset", b =>
                {
                    b.Property<int>("AssetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssetID"), 1L, 1);

                    b.Property<int>("OrganizationID")
                        .HasColumnType("int");

                    b.Property<int>("TableKey")
                        .HasColumnType("int");

                    b.Property<decimal>("TypeID")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("AssetID");

                    b.HasIndex("OrganizationID");

                    b.HasIndex("TypeID", "TableKey")
                        .IsUnique();

                    b.ToTable("Assets");

                    b.HasData(
                        new
                        {
                            AssetID = 1,
                            OrganizationID = 1,
                            TableKey = 3,
                            TypeID = 0m
                        },
                        new
                        {
                            AssetID = 2,
                            OrganizationID = 3,
                            TableKey = 1,
                            TypeID = 0m
                        },
                        new
                        {
                            AssetID = 3,
                            OrganizationID = 1,
                            TableKey = 4,
                            TypeID = 0m
                        },
                        new
                        {
                            AssetID = 4,
                            OrganizationID = 2,
                            TableKey = 2,
                            TypeID = 0m
                        },
                        new
                        {
                            AssetID = 5,
                            OrganizationID = 1,
                            TableKey = 3,
                            TypeID = 1m
                        },
                        new
                        {
                            AssetID = 6,
                            OrganizationID = 3,
                            TableKey = 1,
                            TypeID = 1m
                        },
                        new
                        {
                            AssetID = 7,
                            OrganizationID = 1,
                            TableKey = 2,
                            TypeID = 1m
                        },
                        new
                        {
                            AssetID = 8,
                            OrganizationID = 1,
                            TableKey = 1,
                            TypeID = 2m
                        },
                        new
                        {
                            AssetID = 9,
                            OrganizationID = 3,
                            TableKey = 1,
                            TypeID = 4m
                        },
                        new
                        {
                            AssetID = 10,
                            OrganizationID = 2,
                            TableKey = 1,
                            TypeID = 8m
                        });
                });

            modelBuilder.Entity("VergeDBAPI.Models.BaseStation", b =>
                {
                    b.Property<int>("BaseStationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BaseStationID"), 1L, 1);

                    b.HasKey("BaseStationID");

                    b.ToTable("BaseStations");

                    b.HasData(
                        new
                        {
                            BaseStationID = 1
                        });
                });

            modelBuilder.Entity("VergeDBAPI.Models.Battery", b =>
                {
                    b.Property<int>("BatteryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BatteryID"), 1L, 1);

                    b.Property<int>("BatteryCycles")
                        .HasColumnType("int");

                    b.Property<int>("BatteryType")
                        .HasColumnType("int");

                    b.HasKey("BatteryID");

                    b.ToTable("Batteries");

                    b.HasData(
                        new
                        {
                            BatteryID = 1,
                            BatteryCycles = 20,
                            BatteryType = 0
                        },
                        new
                        {
                            BatteryID = 2,
                            BatteryCycles = 331,
                            BatteryType = 1
                        },
                        new
                        {
                            BatteryID = 3,
                            BatteryCycles = 0,
                            BatteryType = 0
                        });
                });

            modelBuilder.Entity("VergeDBAPI.Models.Drone", b =>
                {
                    b.Property<int>("DroneID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DroneID"), 1L, 1);

                    b.Property<int>("DroneUID")
                        .HasColumnType("int");

                    b.Property<string>("FaaId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Firmware")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FlightHours")
                        .HasColumnType("int");

                    b.HasKey("DroneID");

                    b.HasIndex("DroneUID")
                        .IsUnique();

                    b.HasIndex("FaaId")
                        .IsUnique()
                        .HasFilter("[FaaId] IS NOT NULL");

                    b.ToTable("Drones");

                    b.HasData(
                        new
                        {
                            DroneID = 1,
                            DroneUID = 1001,
                            FaaId = "GTF43UH3S5",
                            Firmware = "1.1.1.3",
                            FlightHours = 2000
                        },
                        new
                        {
                            DroneID = 2,
                            DroneUID = 392,
                            FaaId = "NM7A0B1P2S",
                            Firmware = "",
                            FlightHours = 191
                        },
                        new
                        {
                            DroneID = 3,
                            DroneUID = 2312,
                            Firmware = "",
                            FlightHours = 600
                        },
                        new
                        {
                            DroneID = 4,
                            DroneUID = 912,
                            Firmware = "",
                            FlightHours = 0
                        });
                });

            modelBuilder.Entity("VergeDBAPI.Models.Gateway", b =>
                {
                    b.Property<int>("GatewayID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GatewayID"), 1L, 1);

                    b.HasKey("GatewayID");

                    b.ToTable("Gateways");

                    b.HasData(
                        new
                        {
                            GatewayID = 1
                        });
                });

            modelBuilder.Entity("VergeDBAPI.Models.Organization", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrganizationMetadata")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OwnerID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("OwnerID");

                    b.ToTable("Organizations");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Address = "7905 Browning Road, Pensauken, NJ",
                            Name = "Verge Aero",
                            OrganizationMetadata = "",
                            OwnerID = 1
                        },
                        new
                        {
                            ID = 2,
                            Address = "756 S. Glasgow Avenue Inglewood, CA 90301",
                            Name = "Strictly",
                            OrganizationMetadata = "",
                            OwnerID = 4
                        },
                        new
                        {
                            ID = 3,
                            Address = "1144 Tampa Road, Palm Harbor, FL 34683",
                            Name = "Go Agency",
                            OrganizationMetadata = "",
                            OwnerID = 5
                        });
                });

            modelBuilder.Entity("VergeDBAPI.Models.OrganizationMembership", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("OrganizationID")
                        .HasColumnType("int");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("OrganizationID");

                    b.HasIndex("UserID")
                        .IsUnique();

                    b.ToTable("Memberships");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            OrganizationID = 1,
                            Position = "Engineer",
                            Role = 6,
                            UserID = 1
                        },
                        new
                        {
                            ID = 2,
                            OrganizationID = 1,
                            Position = "Intern",
                            Role = 2,
                            UserID = 2
                        },
                        new
                        {
                            ID = 3,
                            OrganizationID = 2,
                            Position = "Sales",
                            Role = -1,
                            UserID = 3
                        },
                        new
                        {
                            ID = 4,
                            OrganizationID = 2,
                            Position = "CEO",
                            Role = 5,
                            UserID = 4
                        },
                        new
                        {
                            ID = 5,
                            OrganizationID = 3,
                            Position = "CEO",
                            Role = 5,
                            UserID = 5
                        });
                });

            modelBuilder.Entity("VergeDBAPI.Models.Performance", b =>
                {
                    b.Property<int>("PerformanceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PerformanceID"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("DroneID")
                        .HasColumnType("int");

                    b.Property<float>("EndingBattery")
                        .HasColumnType("real");

                    b.Property<float>("FlightTime")
                        .HasColumnType("real");

                    b.Property<int>("Slot")
                        .HasColumnType("int");

                    b.Property<float>("StartingBattery")
                        .HasColumnType("real");

                    b.HasKey("PerformanceID");

                    b.HasIndex("DroneID");

                    b.ToTable("Performances");

                    b.HasData(
                        new
                        {
                            PerformanceID = 1,
                            Date = new DateTime(2022, 7, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DroneID = 2,
                            EndingBattery = 11.6f,
                            FlightTime = 10f,
                            Slot = 188,
                            StartingBattery = 12.6f
                        },
                        new
                        {
                            PerformanceID = 2,
                            Date = new DateTime(2022, 7, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DroneID = 4,
                            EndingBattery = 11.4f,
                            FlightTime = 10.03f,
                            Slot = 23,
                            StartingBattery = 12.6f
                        },
                        new
                        {
                            PerformanceID = 3,
                            Date = new DateTime(2022, 8, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DroneID = 2,
                            EndingBattery = 12.4f,
                            FlightTime = 2f,
                            Slot = 26,
                            StartingBattery = 12.6f
                        });
                });

            modelBuilder.Entity("VergeDBAPI.Models.SmartCase", b =>
                {
                    b.Property<int>("SmartCaseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SmartCaseID"), 1L, 1);

                    b.HasKey("SmartCaseID");

                    b.ToTable("SmartCases");

                    b.HasData(
                        new
                        {
                            SmartCaseID = 1
                        });
                });

            modelBuilder.Entity("VergeDBAPI.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserID = 1,
                            Email = "Tony@vergeaero.com",
                            Password = "Drones",
                            Username = "Tony"
                        },
                        new
                        {
                            UserID = 2,
                            Email = "Gabe@gabe.gov",
                            Password = "Gabe",
                            Username = "Gabe"
                        },
                        new
                        {
                            UserID = 3,
                            Email = "ronalddonald@mcd.gov",
                            Password = "Donald",
                            Username = "Ronald"
                        },
                        new
                        {
                            UserID = 4,
                            Email = "jeremy@strictly.net",
                            Password = "j123",
                            Username = "Jeremy"
                        },
                        new
                        {
                            UserID = 5,
                            Email = "johnny@go.net",
                            Password = "johnny",
                            Username = "John"
                        });
                });

            modelBuilder.Entity("VergeDBAPI.Models.Asset", b =>
                {
                    b.HasOne("VergeDBAPI.Models.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("VergeDBAPI.Models.Organization", b =>
                {
                    b.HasOne("VergeDBAPI.Models.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("VergeDBAPI.Models.OrganizationMembership", b =>
                {
                    b.HasOne("VergeDBAPI.Models.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VergeDBAPI.Models.User", "User")
                        .WithOne("Membership")
                        .HasForeignKey("VergeDBAPI.Models.OrganizationMembership", "UserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Organization");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VergeDBAPI.Models.Performance", b =>
                {
                    b.HasOne("VergeDBAPI.Models.Drone", "Drone")
                        .WithMany("Performances")
                        .HasForeignKey("DroneID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Drone");
                });

            modelBuilder.Entity("VergeDBAPI.Models.Drone", b =>
                {
                    b.Navigation("Performances");
                });

            modelBuilder.Entity("VergeDBAPI.Models.User", b =>
                {
                    b.Navigation("Membership")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
